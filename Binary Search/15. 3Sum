class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        if(nums.size() <= 2)
            return res;
        
        sort(nums.begin(), nums.end());
        
        for(int i = 0; i < nums.size() - 2; i++)
        {
            if(nums[i] == nums[i-1] && i > 0)
                continue; // remove repeating 
            
            int left = i + 1;
            int right = nums.size() -1;
            
            while(left < right)
            {
                vector<int> helper;
                if(nums[left] + nums[right] + nums[i] == 0)
                {
                    helper.push_back(nums[i]);
                    helper.push_back(nums[left]);
                    helper.push_back(nums[right]);
                    res.push_back(helper);
                    left++;
                    right--;
                    while(left < right && nums[left] == nums[left-1])
                        left++;
                    while(left < right && nums[right] == nums[right+1])
                        right--;
                }
                else if(nums[left] + nums[right] + nums[i] < 0)
                {
                    left++;
                }
                else
                {
                    right--;
                }
            }

        }
        return res;
    }
};
