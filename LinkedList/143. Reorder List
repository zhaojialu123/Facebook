/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(head == NULL)
            return;
        // split 
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast != NULL && fast -> next != NULL)
        {
            slow = slow -> next;
            fast = fast -> next -> next;
        }
        
        ListNode* head1 = head;
        ListNode* head2 = slow -> next;
        slow -> next = NULL;
        
        // reverse listnode2
        ListNode* prev = NULL;
        while(head2 != NULL)
        {
            ListNode* temp = head2 -> next;
            head2 -> next = prev;
            prev = head2;
            head2 = temp;
        }
        
        head2 = prev;
        
        // merge
        while(head1 != NULL && head2 != NULL)
        {
            ListNode* pos1 = head1 -> next;
            ListNode* pos2 = head2 -> next;
            head1 -> next = head2;
            head2 -> next = pos1;
            head1 = pos1;
            head2 = pos2;
            
        }
        
    }
};
