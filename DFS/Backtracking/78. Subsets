Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]



class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> helper;
        dfs(nums, res, helper, 0);
        return res;
    }
    
    void dfs(vector<int>& nums, vector<vector<int>>& res, vector<int>& helper, int index)
    {
        res.push_back(helper);
        
        for(int i = index; i < nums.size(); i++)
        {
            
            helper.push_back(nums[i]);
            dfs(nums, res, helper, i+1);
            helper.pop_back();
        }
    }
};
