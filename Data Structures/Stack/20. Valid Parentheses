Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true



class Solution {
public:
    bool isValid(string s) {
        stack<char> collection;
        for(int i = 0; i < s.size(); i++)
        {
            if(s[i] == '(' || s[i] == '[' || s[i] == '{')
                collection.push(s[i]);
            else if(s[i] == ')')
            {
                if(!collection.empty() && collection.top() == '(')
                    collection.pop();
                else
                    return false;
            }
            else if(s[i] == ']')
            {
                if(!collection.empty() && collection.top() == '[')
                    collection.pop();
                else
                    return false;
            }
            else if(s[i] == '}')
            {
                if(!collection.empty() && collection.top() == '{')
                    collection.pop();
                else
                    return false;
            }
        }
        
        if(collection.empty())
            return true;
        else
            return false;
    }
};
