class Solution {
public:
    int numDecodings(string s) {
        vector<int> dp(s.size() + 1, 0);
        if(s[0] == '0')
            return 0;
        dp[0] = 1;
        dp[1] = 1;
        for(int i = 2; i <= s.size(); i++)
        {

            if(s[i-1] == '0' && s[i-2] <= '2' && s[i-2] > '0')
            {
                dp[i] = dp[i-2];
            }
            else if(s[i-1] >= '0' && s[i-1] <= '9' && s[i-2] == '1')
                dp[i] = dp[i-1] + dp[i-2];
            else if(s[i-1] >= '0' && s[i-1] <= '6' && s[i-2] == '2')
                dp[i] = dp[i-1] + dp[i-2];
            else if(s[i-1] == '0')
            {
                return 0;
            }
            else
                dp[i] = dp[i-1];
        }
        
        return dp[s.size()];
    }
}; 



// optimize the space
class Solution {
public:
    int numDecodings(string s) {
        //vector<int> dp(s.size() + 1, 0);
        if(s[0] == '0')
            return 0;
        int c1 = 1;
        int c2 = 1;
        
        for(int i = 2; i <= s.size(); i++)
        {
            if(s[i-1] == '0' && s[i-2] > '0' && s[i-2] <= '2')
            {
                c1 = c2;
                c2 = 0;
            }
            else if(s[i-1] > '0' && s[i-1] <= '9' && s[i-2] == '1')   
            {
                c1 = c1 + c2;
                c2 = c1 - c2;
            }
            else if(s[i-1] > '0' && s[i-1] <= '6' && s[i-2] == '2')
            {
                c1 = c1 + c2;
                c2 = c1 - c2;
            }
            else if(s[i-1] == '0')
                c1 = 0;
            else
                c2= c1;
        }
        
        return c1;
    }
};
